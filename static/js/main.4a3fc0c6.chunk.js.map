{"version":3,"sources":["components/ImageUpload.js","App.js","index.js"],"names":["ImageUpload","_ref","onUpload","selectedFiles","setSelectedFiles","useState","React","createElement","type","multiple","accept","onChange","event","files","Array","from","target","style","marginBottom","marginTop","map","file","index","key","name","App","uploadedFiles","setUploadedFiles","divideTime","setDivideTime","totalDuration","setTotalDuration","loading","setLoading","message","setMessage","calculateDividedDuration","length","Math","floor","padding","fontFamily","async","resizedImages","Promise","all","resolve","Resizer","imageFileResizer","uri","resizeImage","base64","duration","checked","e","value","marginLeft","image","display","alignItems","src","alt","width","height","handleDurationChange","updatedFiles","disabled","onClick","splice","handleRemoveImage","payload","imageName","imageUrl","startDate","endDate","startTime","endTime","Number","console","log","JSON","stringify","response","fetch","method","headers","Content-Type","body","ok","result","json","errorData","error","err","some","backgroundColor","color","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+JA+BeA,MA7Bf,SAAoBC,GAAe,IAAdC,SAAEA,GAAUD,EAC/B,MAAOE,EAAeC,GAAoBC,mBAAS,IAQnD,OACEC,IAAAC,cAAA,WAEED,IAAAC,cAAA,SACEC,KAAK,OACLC,UAAQ,EACRC,OAAO,UACPC,SAboBC,IACxB,MAAMC,EAAQC,MAAMC,KAAKH,EAAMI,OAAOH,OACtCT,EAAiBS,GACjBX,EAASW,IAWLI,MAAO,CAAEC,aAAc,UAGzBZ,IAAAC,cAAA,OAAKU,MAAO,CAAEE,UAAW,SACtBhB,EAAciB,IAAI,CAACC,EAAMC,IACxBhB,IAAAC,cAAA,KAAGgB,IAAKD,GAAQD,EAAKG,0BCqJhBC,MAzKf,WACE,MAAOC,EAAeC,GAAoBtB,mBAAS,KAC5CuB,EAAYC,GAAiBxB,oBAAS,IACtCyB,EAAeC,GAAoB1B,mBAAS,IAC5C2B,EAASC,GAAc5B,oBAAS,IAChC6B,EAASC,GAAc9B,mBAAS,IAyCjC+B,EAA2BA,IAC3BV,EAAcW,OAAS,GAAKP,EAAgB,EACvCQ,KAAKC,MAAuB,GAAhBT,EAAsBJ,EAAcW,QAElD,EAsDT,OACE/B,IAAAC,cAAA,OAAKU,MAAO,CAAEuB,QAAS,OAAQC,WAAY,UACzCnC,IAAAC,cAAA,UAAI,qBAEJD,IAAAC,cAACP,EAAW,CAACE,SAvFIwC,UACnB,MAAMC,QAAsBC,QAAQC,IAClC/B,MAAMC,KAAKF,GAAOO,IAAKC,GAhBNA,IACnB,IAAIuB,QAASE,IACXC,IAAQC,iBACN3B,EACA,IACA,IACA,OACA,GACA,EACC4B,GAAQH,EAAQG,GACjB,YAM8BC,CAAY7B,KAE9CM,EACEgB,EAAcvB,IAAI,CAAC+B,EAAQ7B,KAAK,CAC9BD,KAAMR,EAAMS,GACZ6B,SACAC,SAAU,SAiFX1B,EAAcW,OAAS,GACtB/B,IAAAC,cAAA,OAAKU,MAAO,CAAEE,UAAW,SACvBb,IAAAC,cAAA,aACED,IAAAC,cAAA,SACEC,KAAK,WACL6C,QAASzB,EACTjB,SAAW2C,GAAMzB,EAAcyB,EAAEtC,OAAOqC,WACxC,gCAIHzB,GACCtB,IAAAC,cAAA,OAAKU,MAAO,CAAEE,UAAW,SACvBb,IAAAC,cAAA,aAAO,iCACPD,IAAAC,cAAA,SACEC,KAAK,SACL+C,MAAOzB,EACPnB,SAAW2C,GAAMvB,EAAiBuB,EAAEtC,OAAOuC,OAC3CtC,MAAO,CAAEuC,WAAY,YAO9B9B,EAAcW,OAAS,GACtB/B,IAAAC,cAAA,OAAKU,MAAO,CAAEE,UAAW,SACvBb,IAAAC,cAAA,UAAI,mBACHmB,EAAcN,IAAI,CAACqC,EAAOnC,IACzBhB,IAAAC,cAAA,OAAKgB,IAAKD,EAAOL,MAAO,CAAEyC,QAAS,OAAQC,WAAY,SAAUzC,aAAc,SAC7EZ,IAAAC,cAAA,OAAKqD,IAAKH,EAAMN,OAAQU,IAAKJ,EAAMpC,KAAKG,KAAMP,MAAO,CAAE6C,MAAO,OAAQC,OAAQ,UAC9EzD,IAAAC,cAAA,SACEC,KAAK,SACL+C,MAAO3B,EAAaQ,IAA6BqB,EAAML,SACvDzC,SAAW2C,GAxGIU,EAAC1C,EAAOiC,KACnC,MAAMU,EAAe,IAAIvC,GACzBuC,EAAa3C,GAAO8B,SAAWG,EAC/B5B,EAAiBsC,IAqGYD,CAAqB1C,EAAOgC,EAAEtC,OAAOuC,OACtDW,SAAUtC,EACVX,MAAO,CAAEuC,WAAY,UAEvBlD,IAAAC,cAAA,UAAQ4D,QAASA,IAlHF7C,KACzB,MAAM2C,EAAe,IAAIvC,GACzBuC,EAAaG,OAAO9C,EAAO,GAC3BK,EAAiBsC,IA+GgBI,CAAkB/C,GAAQL,MAAO,CAAEuC,WAAY,SAAU,aAQxFlD,IAAAC,cAAA,UACE4D,QAnGezB,UACnBT,GAAW,GACXE,EAAW,IAEX,IAAK,MAAMsB,KAAS/B,EAAe,CACjC,MAAM4C,EAAU,CACdC,UAAWd,EAAMpC,KAAKG,KACtBgD,SAAUf,EAAMN,OAChBsB,UAAW,aACXC,QAAS,aACTC,UAAW,WACXC,QAAS,WACTxB,SAAUxB,EAAaQ,IAA6ByC,OAAOpB,EAAML,WAInE0B,QAAQC,IAAI,eAAgBC,KAAKC,UAAUX,IAE3C,IACE,MAAMY,QAAiBC,MAAM,qDAAsD,CACjFC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMP,KAAKC,UAAUX,KAGvB,GAAIY,EAASM,GAAI,CACf,MAAMC,QAAeP,EAASQ,OAC9BZ,QAAQC,aAAatB,EAAMpC,KAAKG,8BAA+BiE,GAC/DtD,WAAoBsB,EAAMpC,KAAKG,mCAC1B,CACL,MAAMmE,QAAkBT,EAASQ,OACjCZ,QAAQc,yBAAyBnC,EAAMpC,KAAKG,QAASmE,EAAUC,OAC/DzD,EAAWwD,EAAUC,2BAA6BnC,EAAMpC,KAAKG,UAE/D,MAAOqE,GACPf,QAAQc,yBAAyBnC,EAAMpC,KAAKG,QAASqE,GACrD1D,uCAAgDsB,EAAMpC,KAAKG,UAI/DS,GAAW,GACXN,EAAiB,KAyDbuC,UAxGAtC,GAAuC,IAAzBF,EAAcW,QACzBX,EAAcoE,KAAMrC,GAA6B,IAAnBA,EAAML,WAuGPpB,EAChCf,MAAO,CAAEE,UAAW,OAAQqB,QAAS,YAAauD,gBAAiB,OAAQC,MAAO,UAEjFhE,EAAU,eAAiB,UAG7BE,GAAW5B,IAAAC,cAAA,KAAGU,MAAO,CAAEE,UAAW,OAAQ6E,MAAO,QAAU9D,KCnKrD+D,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/F,IAAAC,cAACD,IAAMgG,WAAU,KACfhG,IAAAC,cAACkB,EAAG","file":"static/js/main.4a3fc0c6.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction ImageUpload({ onUpload }) {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  const handleFileChange = (event) => {\n    const files = Array.from(event.target.files);\n    setSelectedFiles(files); // Store files locally\n    onUpload(files); // Pass files to the parent\n  };\n\n  return (\n    <div>\n      {/* File Input */}\n      <input\n        type=\"file\"\n        multiple\n        accept=\"image/*\"\n        onChange={handleFileChange}\n        style={{ marginBottom: '10px' }}\n      />\n      {/* Display File Names */}\n      <div style={{ marginTop: '10px' }}>\n        {selectedFiles.map((file, index) => (\n          <p key={index}>{file.name}</p>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ImageUpload;\n","import React, { useState } from 'react';\nimport ImageUpload from './components/ImageUpload';\nimport Resizer from 'react-image-file-resizer';\n\nfunction App() {\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [divideTime, setDivideTime] = useState(false);\n  const [totalDuration, setTotalDuration] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const resizeImage = (file) =>\n    new Promise((resolve) => {\n      Resizer.imageFileResizer(\n        file,\n        800, // Max width\n        800, // Max height\n        'JPEG', // Output format\n        90, // Quality (0-100)\n        0, // Rotation\n        (uri) => resolve(uri),\n        'base64' // Output type\n      );\n    });\n\n  const handleUpload = async (files) => {\n    const resizedImages = await Promise.all(\n      Array.from(files).map((file) => resizeImage(file))\n    );\n    setUploadedFiles(\n      resizedImages.map((base64, index) => ({\n        file: files[index],\n        base64,\n        duration: 0,\n      }))\n    );\n  };\n\n  const handleRemoveImage = (index) => {\n    const updatedFiles = [...uploadedFiles];\n    updatedFiles.splice(index, 1);\n    setUploadedFiles(updatedFiles);\n  };\n\n  const handleDurationChange = (index, value) => {\n    const updatedFiles = [...uploadedFiles];\n    updatedFiles[index].duration = value;\n    setUploadedFiles(updatedFiles);\n  };\n\n  const calculateDividedDuration = () => {\n    if (uploadedFiles.length > 0 && totalDuration > 0) {\n      return Math.floor((totalDuration * 60) / uploadedFiles.length);\n    }\n    return 0;\n  };\n\n  const isSubmitDisabled = () => {\n    if (divideTime || uploadedFiles.length === 0) return false;\n    return uploadedFiles.some((image) => image.duration === 0);\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    setMessage('');\n\n    for (const image of uploadedFiles) {\n      const payload = {\n        imageName: image.file.name,\n        imageUrl: image.base64,\n        startDate: '2024-11-20',\n        endDate: '2024-11-25',\n        startTime: '08:00:00',\n        endTime: '18:00:00',\n        duration: divideTime ? calculateDividedDuration() : Number(image.duration),\n      };\n\n\n      console.log(\"data sending\", JSON.stringify(payload))\n\n      try {\n        const response = await fetch('https://ad-display-backend.onrender.com/api/images', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(payload),\n        });\n\n        if (response.ok) {\n          const result = await response.json();\n          console.log(`Image ${image.file.name} uploaded successfully:`, result);\n          setMessage(`Image ${image.file.name} uploaded successfully!`);\n        } else {\n          const errorData = await response.json();\n          console.error(`Error uploading ${image.file.name}:`, errorData.error);\n          setMessage(errorData.error || `Failed to upload ${image.file.name}.`);\n        }\n      } catch (err) {\n        console.error(`Error uploading ${image.file.name}:`, err);\n        setMessage(`An error occurred while uploading ${image.file.name}.`);\n      }\n    }\n\n    setLoading(false);\n    setUploadedFiles([]); // Clear uploaded files after submission\n  };\n\n  return (\n    <div style={{ padding: '20px', fontFamily: 'Arial' }}>\n      <h1>Ad Display Portal</h1>\n\n      <ImageUpload onUpload={handleUpload} />\n\n      {uploadedFiles.length > 0 && (\n        <div style={{ marginTop: '20px' }}>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={divideTime}\n              onChange={(e) => setDivideTime(e.target.checked)}\n            />\n            Divide time Duration equally\n          </label>\n\n          {divideTime && (\n            <div style={{ marginTop: '10px' }}>\n              <label>Total Duration (in minutes): </label>\n              <input\n                type=\"number\"\n                value={totalDuration}\n                onChange={(e) => setTotalDuration(e.target.value)}\n                style={{ marginLeft: '10px' }}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {uploadedFiles.length > 0 && (\n        <div style={{ marginTop: '20px' }}>\n          <h3>Uploaded Images</h3>\n          {uploadedFiles.map((image, index) => (\n            <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n              <img src={image.base64} alt={image.file.name} style={{ width: '60px', height: '60px' }} />\n              <input\n                type=\"number\"\n                value={divideTime ? calculateDividedDuration() : image.duration}\n                onChange={(e) => handleDurationChange(index, e.target.value)}\n                disabled={divideTime}\n                style={{ marginLeft: '10px' }}\n              />\n              <button onClick={() => handleRemoveImage(index)} style={{ marginLeft: '10px' }}>\n                Remove\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n\n      <button\n        onClick={handleSubmit}\n        disabled={isSubmitDisabled() || loading}\n        style={{ marginTop: '20px', padding: '10px 20px', backgroundColor: 'blue', color: 'white' }}\n      >\n        {loading ? 'Uploading...' : 'Submit'}\n      </button>\n\n      {message && <p style={{ marginTop: '20px', color: 'red' }}>{message}</p>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}